apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  release: "{{ .Release.Name }}"
  heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ template "fullname" . }}
          {{ if .Values.annotations }}
                annotations:
                  {{- range $key, $value := .Values.annotations }}
                    {{ $key }}: {{ $value }}
                    {{- end }}
          {{ end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: ATOMIX_CONTROLLER
            value: {{ .Values.store.controller | quote }}
          - name: ATOMIX_APP
            value: {{ template "fullname" . }}
          - name: ATOMIX_RAFT_GROUP
            value: raft
          - name: ATOMIX_NAMESPACE
          value: {{ template "fullname" . }}
        args:
          - "-caPath=/etc/onos-topo/certs/tls.cacrt"
          - "-keyPath=/etc/onos-topo/certs/tls.key"
          - "-certPath=/etc/onos-topo/certs/tls.crt"
        ports:
          - name: grpc
            containerPort: 5150
          {{- if .Values.debug }}
          - name: debug
            containerPort: 40000
            protocol: TCP
          {{- end }}
        readinessProbe:
          tcpSocket:
            port: 5150
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 5150
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
          - name: secret
            mountPath: /etc/onos-topo/certs
            readOnly: true
          - name: topo
            mountPath: /etc/onos-topo/configs
            readOnly: true
      # Mount test volumes
      # TODO: This should be removed when stores are added!
      volumes:
        - name: secret
          secret:
            secretName: {{ template "fullname" . }}-secret
        - name: topo
          configMap:
            localObjectReference: onos-topo

